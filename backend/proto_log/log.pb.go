// Code generated by protoc-gen-go. DO NOT EDIT.
// source: log.proto

package proto_log

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type QueryShareLogTags struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Pid                  int32    `protobuf:"varint,2,opt,name=Pid,proto3" json:"Pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryShareLogTags) Reset()         { *m = QueryShareLogTags{} }
func (m *QueryShareLogTags) String() string { return proto.CompactTextString(m) }
func (*QueryShareLogTags) ProtoMessage()    {}
func (*QueryShareLogTags) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{0}
}

func (m *QueryShareLogTags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryShareLogTags.Unmarshal(m, b)
}
func (m *QueryShareLogTags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryShareLogTags.Marshal(b, m, deterministic)
}
func (m *QueryShareLogTags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryShareLogTags.Merge(m, src)
}
func (m *QueryShareLogTags) XXX_Size() int {
	return xxx_messageInfo_QueryShareLogTags.Size(m)
}
func (m *QueryShareLogTags) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryShareLogTags.DiscardUnknown(m)
}

var xxx_messageInfo_QueryShareLogTags proto.InternalMessageInfo

func (m *QueryShareLogTags) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *QueryShareLogTags) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type BlockLog struct {
	WorkerName           string   `protobuf:"bytes,1,opt,name=worker_name,json=workerName,proto3" json:"worker_name,omitempty"`
	ServerIp             string   `protobuf:"bytes,2,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`
	ClientIp             string   `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	UserName             string   `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ExtName              string   `protobuf:"bytes,5,opt,name=ext_name,json=extName,proto3" json:"ext_name,omitempty"`
	UserAgent            string   `protobuf:"bytes,6,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	HostName             string   `protobuf:"bytes,7,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Pid                  int32    `protobuf:"varint,8,opt,name=pid,proto3" json:"pid,omitempty"`
	Height               int32    `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	Hash                 string   `protobuf:"bytes,10,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockLog) Reset()         { *m = BlockLog{} }
func (m *BlockLog) String() string { return proto.CompactTextString(m) }
func (*BlockLog) ProtoMessage()    {}
func (*BlockLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{1}
}

func (m *BlockLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockLog.Unmarshal(m, b)
}
func (m *BlockLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockLog.Marshal(b, m, deterministic)
}
func (m *BlockLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockLog.Merge(m, src)
}
func (m *BlockLog) XXX_Size() int {
	return xxx_messageInfo_BlockLog.Size(m)
}
func (m *BlockLog) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockLog.DiscardUnknown(m)
}

var xxx_messageInfo_BlockLog proto.InternalMessageInfo

func (m *BlockLog) GetWorkerName() string {
	if m != nil {
		return m.WorkerName
	}
	return ""
}

func (m *BlockLog) GetServerIp() string {
	if m != nil {
		return m.ServerIp
	}
	return ""
}

func (m *BlockLog) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *BlockLog) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *BlockLog) GetExtName() string {
	if m != nil {
		return m.ExtName
	}
	return ""
}

func (m *BlockLog) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *BlockLog) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *BlockLog) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *BlockLog) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockLog) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type QueryShareLogLatestTsRequest struct {
	CoinType             string             `protobuf:"bytes,1,opt,name=coin_type,json=coinType,proto3" json:"coin_type,omitempty"`
	Tags                 *QueryShareLogTags `protobuf:"bytes,2,opt,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryShareLogLatestTsRequest) Reset()         { *m = QueryShareLogLatestTsRequest{} }
func (m *QueryShareLogLatestTsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryShareLogLatestTsRequest) ProtoMessage()    {}
func (*QueryShareLogLatestTsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{2}
}

func (m *QueryShareLogLatestTsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryShareLogLatestTsRequest.Unmarshal(m, b)
}
func (m *QueryShareLogLatestTsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryShareLogLatestTsRequest.Marshal(b, m, deterministic)
}
func (m *QueryShareLogLatestTsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryShareLogLatestTsRequest.Merge(m, src)
}
func (m *QueryShareLogLatestTsRequest) XXX_Size() int {
	return xxx_messageInfo_QueryShareLogLatestTsRequest.Size(m)
}
func (m *QueryShareLogLatestTsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryShareLogLatestTsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryShareLogLatestTsRequest proto.InternalMessageInfo

func (m *QueryShareLogLatestTsRequest) GetCoinType() string {
	if m != nil {
		return m.CoinType
	}
	return ""
}

func (m *QueryShareLogLatestTsRequest) GetTags() *QueryShareLogTags {
	if m != nil {
		return m.Tags
	}
	return nil
}

type QueryShareLogLatestTsResponse struct {
	LatestTs             int64    `protobuf:"varint,2,opt,name=latest_ts,json=latestTs,proto3" json:"latest_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryShareLogLatestTsResponse) Reset()         { *m = QueryShareLogLatestTsResponse{} }
func (m *QueryShareLogLatestTsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryShareLogLatestTsResponse) ProtoMessage()    {}
func (*QueryShareLogLatestTsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{3}
}

func (m *QueryShareLogLatestTsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryShareLogLatestTsResponse.Unmarshal(m, b)
}
func (m *QueryShareLogLatestTsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryShareLogLatestTsResponse.Marshal(b, m, deterministic)
}
func (m *QueryShareLogLatestTsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryShareLogLatestTsResponse.Merge(m, src)
}
func (m *QueryShareLogLatestTsResponse) XXX_Size() int {
	return xxx_messageInfo_QueryShareLogLatestTsResponse.Size(m)
}
func (m *QueryShareLogLatestTsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryShareLogLatestTsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryShareLogLatestTsResponse proto.InternalMessageInfo

func (m *QueryShareLogLatestTsResponse) GetLatestTs() int64 {
	if m != nil {
		return m.LatestTs
	}
	return 0
}

type AddBlockLogRequest struct {
	Ts                   int64     `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	CoinType             string    `protobuf:"bytes,2,opt,name=coinType,proto3" json:"coinType,omitempty"`
	Log                  *BlockLog `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AddBlockLogRequest) Reset()         { *m = AddBlockLogRequest{} }
func (m *AddBlockLogRequest) String() string { return proto.CompactTextString(m) }
func (*AddBlockLogRequest) ProtoMessage()    {}
func (*AddBlockLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{4}
}

func (m *AddBlockLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlockLogRequest.Unmarshal(m, b)
}
func (m *AddBlockLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlockLogRequest.Marshal(b, m, deterministic)
}
func (m *AddBlockLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlockLogRequest.Merge(m, src)
}
func (m *AddBlockLogRequest) XXX_Size() int {
	return xxx_messageInfo_AddBlockLogRequest.Size(m)
}
func (m *AddBlockLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlockLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlockLogRequest proto.InternalMessageInfo

func (m *AddBlockLogRequest) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *AddBlockLogRequest) GetCoinType() string {
	if m != nil {
		return m.CoinType
	}
	return ""
}

func (m *AddBlockLogRequest) GetLog() *BlockLog {
	if m != nil {
		return m.Log
	}
	return nil
}

type AddBlockLogResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlockLogResponse) Reset()         { *m = AddBlockLogResponse{} }
func (m *AddBlockLogResponse) String() string { return proto.CompactTextString(m) }
func (*AddBlockLogResponse) ProtoMessage()    {}
func (*AddBlockLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{5}
}

func (m *AddBlockLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlockLogResponse.Unmarshal(m, b)
}
func (m *AddBlockLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlockLogResponse.Marshal(b, m, deterministic)
}
func (m *AddBlockLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlockLogResponse.Merge(m, src)
}
func (m *AddBlockLogResponse) XXX_Size() int {
	return xxx_messageInfo_AddBlockLogResponse.Size(m)
}
func (m *AddBlockLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlockLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlockLogResponse proto.InternalMessageInfo

func (m *AddBlockLogResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type MinShareLog struct {
	Tm                   int32    `protobuf:"varint,1,opt,name=tm,proto3" json:"tm,omitempty"`
	WorkerName           string   `protobuf:"bytes,2,opt,name=worker_name,json=workerName,proto3" json:"worker_name,omitempty"`
	ServerIp             string   `protobuf:"bytes,3,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`
	ClientIp             string   `protobuf:"bytes,4,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	UserName             string   `protobuf:"bytes,5,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ExtName              string   `protobuf:"bytes,6,opt,name=ext_name,json=extName,proto3" json:"ext_name,omitempty"`
	UserAgent            string   `protobuf:"bytes,7,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	HostName             string   `protobuf:"bytes,8,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Pid                  int32    `protobuf:"varint,9,opt,name=pid,proto3" json:"pid,omitempty"`
	Height               int32    `protobuf:"varint,10,opt,name=height,proto3" json:"height,omitempty"`
	ComputePower         float64  `protobuf:"fixed64,11,opt,name=compute_power,json=computePower,proto3" json:"compute_power,omitempty"`
	IsRight              bool     `protobuf:"varint,12,opt,name=is_right,json=isRight,proto3" json:"is_right,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MinShareLog) Reset()         { *m = MinShareLog{} }
func (m *MinShareLog) String() string { return proto.CompactTextString(m) }
func (*MinShareLog) ProtoMessage()    {}
func (*MinShareLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{6}
}

func (m *MinShareLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinShareLog.Unmarshal(m, b)
}
func (m *MinShareLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinShareLog.Marshal(b, m, deterministic)
}
func (m *MinShareLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinShareLog.Merge(m, src)
}
func (m *MinShareLog) XXX_Size() int {
	return xxx_messageInfo_MinShareLog.Size(m)
}
func (m *MinShareLog) XXX_DiscardUnknown() {
	xxx_messageInfo_MinShareLog.DiscardUnknown(m)
}

var xxx_messageInfo_MinShareLog proto.InternalMessageInfo

func (m *MinShareLog) GetTm() int32 {
	if m != nil {
		return m.Tm
	}
	return 0
}

func (m *MinShareLog) GetWorkerName() string {
	if m != nil {
		return m.WorkerName
	}
	return ""
}

func (m *MinShareLog) GetServerIp() string {
	if m != nil {
		return m.ServerIp
	}
	return ""
}

func (m *MinShareLog) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *MinShareLog) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *MinShareLog) GetExtName() string {
	if m != nil {
		return m.ExtName
	}
	return ""
}

func (m *MinShareLog) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *MinShareLog) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *MinShareLog) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *MinShareLog) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *MinShareLog) GetComputePower() float64 {
	if m != nil {
		return m.ComputePower
	}
	return 0
}

func (m *MinShareLog) GetIsRight() bool {
	if m != nil {
		return m.IsRight
	}
	return false
}

type AddMinShareLogsRequest struct {
	Logs                 []*MinShareLog `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	CoinType             string         `protobuf:"bytes,2,opt,name=coinType,proto3" json:"coinType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AddMinShareLogsRequest) Reset()         { *m = AddMinShareLogsRequest{} }
func (m *AddMinShareLogsRequest) String() string { return proto.CompactTextString(m) }
func (*AddMinShareLogsRequest) ProtoMessage()    {}
func (*AddMinShareLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{7}
}

func (m *AddMinShareLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMinShareLogsRequest.Unmarshal(m, b)
}
func (m *AddMinShareLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMinShareLogsRequest.Marshal(b, m, deterministic)
}
func (m *AddMinShareLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMinShareLogsRequest.Merge(m, src)
}
func (m *AddMinShareLogsRequest) XXX_Size() int {
	return xxx_messageInfo_AddMinShareLogsRequest.Size(m)
}
func (m *AddMinShareLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMinShareLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddMinShareLogsRequest proto.InternalMessageInfo

func (m *AddMinShareLogsRequest) GetLogs() []*MinShareLog {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *AddMinShareLogsRequest) GetCoinType() string {
	if m != nil {
		return m.CoinType
	}
	return ""
}

type AddMinShareLogsResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddMinShareLogsResponse) Reset()         { *m = AddMinShareLogsResponse{} }
func (m *AddMinShareLogsResponse) String() string { return proto.CompactTextString(m) }
func (*AddMinShareLogsResponse) ProtoMessage()    {}
func (*AddMinShareLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a153da538f858886, []int{8}
}

func (m *AddMinShareLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMinShareLogsResponse.Unmarshal(m, b)
}
func (m *AddMinShareLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMinShareLogsResponse.Marshal(b, m, deterministic)
}
func (m *AddMinShareLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMinShareLogsResponse.Merge(m, src)
}
func (m *AddMinShareLogsResponse) XXX_Size() int {
	return xxx_messageInfo_AddMinShareLogsResponse.Size(m)
}
func (m *AddMinShareLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMinShareLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddMinShareLogsResponse proto.InternalMessageInfo

func (m *AddMinShareLogsResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*QueryShareLogTags)(nil), "proto_log.QueryShareLogTags")
	proto.RegisterType((*BlockLog)(nil), "proto_log.BlockLog")
	proto.RegisterType((*QueryShareLogLatestTsRequest)(nil), "proto_log.QueryShareLogLatestTsRequest")
	proto.RegisterType((*QueryShareLogLatestTsResponse)(nil), "proto_log.QueryShareLogLatestTsResponse")
	proto.RegisterType((*AddBlockLogRequest)(nil), "proto_log.AddBlockLogRequest")
	proto.RegisterType((*AddBlockLogResponse)(nil), "proto_log.AddBlockLogResponse")
	proto.RegisterType((*MinShareLog)(nil), "proto_log.MinShareLog")
	proto.RegisterType((*AddMinShareLogsRequest)(nil), "proto_log.AddMinShareLogsRequest")
	proto.RegisterType((*AddMinShareLogsResponse)(nil), "proto_log.AddMinShareLogsResponse")
}

func init() { proto.RegisterFile("log.proto", fileDescriptor_a153da538f858886) }

var fileDescriptor_a153da538f858886 = []byte{
	// 590 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc9, 0x8e, 0xd3, 0x40,
	0x10, 0x25, 0x76, 0x16, 0xbb, 0x3c, 0x6c, 0x3d, 0x22, 0x98, 0x30, 0x81, 0x60, 0x84, 0x88, 0x90,
	0x88, 0x20, 0x5c, 0xb9, 0x84, 0x13, 0x48, 0x21, 0x1a, 0x9a, 0x9c, 0xb8, 0x18, 0x13, 0xb7, 0x6c,
	0x6b, 0x1c, 0xb7, 0x71, 0x77, 0x98, 0xc9, 0x97, 0x70, 0xe4, 0xaf, 0xf8, 0x1e, 0xd4, 0xe5, 0x45,
	0xce, 0x66, 0x4e, 0x76, 0xbf, 0x57, 0xf5, 0xaa, 0xba, 0xea, 0x35, 0x98, 0x31, 0x0f, 0x26, 0x69,
	0xc6, 0x25, 0x27, 0x26, 0x7e, 0xdc, 0x98, 0x07, 0xce, 0x0c, 0xee, 0x7f, 0xd9, 0xb0, 0x6c, 0xfb,
	0x35, 0xf4, 0x32, 0x36, 0xe7, 0xc1, 0xd2, 0x0b, 0x04, 0x19, 0x80, 0xf1, 0x91, 0x0b, 0x99, 0x78,
	0x6b, 0x66, 0xb7, 0x46, 0xad, 0xb1, 0x49, 0xab, 0x33, 0xb9, 0x07, 0xfa, 0x65, 0xe4, 0xdb, 0xda,
	0xa8, 0x35, 0xee, 0x50, 0xf5, 0xeb, 0xfc, 0xd6, 0xc0, 0xf8, 0x10, 0xf3, 0xd5, 0xd5, 0x9c, 0x07,
	0xe4, 0x29, 0x58, 0xd7, 0x3c, 0xbb, 0x62, 0x99, 0x5b, 0xcb, 0x86, 0x1c, 0x5a, 0xa8, 0xfc, 0xc7,
	0x60, 0x0a, 0x96, 0xfd, 0x62, 0x99, 0x1b, 0xa5, 0xa8, 0x62, 0x52, 0x23, 0x07, 0x3e, 0xa5, 0x8a,
	0x5c, 0xc5, 0x11, 0x4b, 0xa4, 0x22, 0xf5, 0x9c, 0xcc, 0x81, 0x9c, 0xdc, 0x88, 0x52, 0xb8, 0x9d,
	0x93, 0x0a, 0x40, 0xd9, 0x47, 0x60, 0xb0, 0x1b, 0x99, 0x73, 0x1d, 0xe4, 0x7a, 0xec, 0x46, 0x22,
	0x35, 0x04, 0xc0, 0x3c, 0x2f, 0x60, 0x89, 0xb4, 0xbb, 0x48, 0xa2, 0xd2, 0x4c, 0x01, 0x4a, 0x36,
	0xe4, 0xa2, 0x48, 0xed, 0xe5, 0xb2, 0x0a, 0x58, 0x14, 0xb7, 0x4d, 0x23, 0xdf, 0x36, 0xf2, 0xdb,
	0xa6, 0x91, 0x4f, 0xfa, 0xd0, 0x0d, 0x59, 0x14, 0x84, 0xd2, 0x36, 0x11, 0x2c, 0x4e, 0x84, 0x40,
	0x3b, 0xf4, 0x44, 0x68, 0x03, 0x2a, 0xe0, 0xbf, 0xb3, 0x86, 0x8b, 0x9d, 0xe1, 0xce, 0x3d, 0xc9,
	0x84, 0x5c, 0x0a, 0xca, 0x7e, 0x6e, 0x98, 0xc0, 0xd2, 0x2b, 0x1e, 0x25, 0xae, 0xdc, 0xa6, 0xd5,
	0xa0, 0x15, 0xb0, 0xdc, 0xa6, 0x8c, 0xbc, 0x81, 0xb6, 0xf4, 0x02, 0x81, 0x33, 0xb2, 0xa6, 0x17,
	0x93, 0x6a, 0x67, 0x93, 0x83, 0x85, 0x51, 0x8c, 0x74, 0xde, 0xc3, 0xf0, 0x44, 0x39, 0x91, 0xf2,
	0x44, 0xe0, 0xec, 0x63, 0xc4, 0x5c, 0x99, 0xeb, 0xea, 0xd4, 0x88, 0x8b, 0x20, 0x27, 0x00, 0x32,
	0xf3, 0xfd, 0x72, 0x91, 0x65, 0x8b, 0x77, 0x40, 0x93, 0x02, 0x7b, 0xd3, 0xa9, 0x26, 0xd1, 0x1a,
	0x65, 0x87, 0xe5, 0xf6, 0xaa, 0x8e, 0x5f, 0x80, 0x1e, 0xf3, 0x00, 0xf7, 0x66, 0x4d, 0xcf, 0x6b,
	0x0d, 0x57, 0xa2, 0x8a, 0x77, 0x5e, 0xc3, 0xf9, 0x4e, 0xa1, 0xa2, 0xb9, 0x3e, 0x74, 0x33, 0x26,
	0x36, 0xb1, 0xc4, 0x6a, 0x06, 0x2d, 0x4e, 0xce, 0x5f, 0x0d, 0xac, 0xcf, 0x51, 0x52, 0x5e, 0x0a,
	0x3b, 0x5a, 0x63, 0x4c, 0x87, 0x6a, 0x72, 0xbd, 0xef, 0x38, 0xad, 0xd9, 0x71, 0x7a, 0x93, 0xe3,
	0xda, 0x4d, 0x8e, 0xeb, 0x34, 0x38, 0xae, 0xdb, 0xe4, 0xb8, 0x5e, 0xa3, 0xe3, 0x8c, 0xe3, 0x8e,
	0x33, 0x8f, 0x39, 0x0e, 0x76, 0x1c, 0xf7, 0x1c, 0x6e, 0xaf, 0xf8, 0x3a, 0xdd, 0x48, 0xe6, 0xa6,
	0xfc, 0x9a, 0x65, 0xb6, 0x35, 0x6a, 0x8d, 0x5b, 0xf4, 0xac, 0x00, 0x2f, 0x15, 0xa6, 0xba, 0x8c,
	0x84, 0x9b, 0x61, 0xfa, 0x19, 0xce, 0xb5, 0x17, 0x09, 0xaa, 0x8e, 0xce, 0x77, 0xe8, 0xcf, 0x7c,
	0xbf, 0x36, 0xda, 0xca, 0x97, 0xaf, 0xa0, 0x1d, 0xf3, 0x40, 0xad, 0x5d, 0x1f, 0x5b, 0xd3, 0x7e,
	0x6d, 0x93, 0xb5, 0x68, 0x8a, 0x31, 0x4d, 0x86, 0x70, 0xde, 0xc2, 0xc3, 0x83, 0x0a, 0xcd, 0xdb,
	0x9e, 0xfe, 0xd1, 0x40, 0x57, 0x5b, 0x8e, 0xe1, 0xc1, 0x51, 0x2f, 0x93, 0x97, 0xa7, 0x1e, 0xc2,
	0xde, 0xe3, 0x1a, 0x8c, 0xff, 0x1f, 0x98, 0xf7, 0xe2, 0xdc, 0x22, 0x0b, 0xb0, 0x6a, 0x96, 0x24,
	0xc3, 0x5a, 0xea, 0xe1, 0x9b, 0x18, 0x3c, 0x39, 0x45, 0x57, 0x7a, 0xdf, 0xe0, 0xee, 0xde, 0xc5,
	0xc9, 0xb3, 0xdd, 0xa4, 0x23, 0x63, 0x1f, 0x38, 0x4d, 0x21, 0xa5, 0xf6, 0x8f, 0x2e, 0x06, 0xbd,
	0xfb, 0x17, 0x00, 0x00, 0xff, 0xff, 0x32, 0x7d, 0x76, 0xbb, 0xd0, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogClient is the client API for Log service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogClient interface {
	QueryShareLogLatestTs(ctx context.Context, in *QueryShareLogLatestTsRequest, opts ...grpc.CallOption) (*QueryShareLogLatestTsResponse, error)
	AddBlockLog(ctx context.Context, in *AddBlockLogRequest, opts ...grpc.CallOption) (*AddBlockLogResponse, error)
	AddMinShareLogs(ctx context.Context, in *AddMinShareLogsRequest, opts ...grpc.CallOption) (*AddMinShareLogsResponse, error)
}

type logClient struct {
	cc *grpc.ClientConn
}

func NewLogClient(cc *grpc.ClientConn) LogClient {
	return &logClient{cc}
}

func (c *logClient) QueryShareLogLatestTs(ctx context.Context, in *QueryShareLogLatestTsRequest, opts ...grpc.CallOption) (*QueryShareLogLatestTsResponse, error) {
	out := new(QueryShareLogLatestTsResponse)
	err := c.cc.Invoke(ctx, "/proto_log.Log/QueryShareLogLatestTs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logClient) AddBlockLog(ctx context.Context, in *AddBlockLogRequest, opts ...grpc.CallOption) (*AddBlockLogResponse, error) {
	out := new(AddBlockLogResponse)
	err := c.cc.Invoke(ctx, "/proto_log.Log/AddBlockLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logClient) AddMinShareLogs(ctx context.Context, in *AddMinShareLogsRequest, opts ...grpc.CallOption) (*AddMinShareLogsResponse, error) {
	out := new(AddMinShareLogsResponse)
	err := c.cc.Invoke(ctx, "/proto_log.Log/AddMinShareLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogServer is the server API for Log service.
type LogServer interface {
	QueryShareLogLatestTs(context.Context, *QueryShareLogLatestTsRequest) (*QueryShareLogLatestTsResponse, error)
	AddBlockLog(context.Context, *AddBlockLogRequest) (*AddBlockLogResponse, error)
	AddMinShareLogs(context.Context, *AddMinShareLogsRequest) (*AddMinShareLogsResponse, error)
}

func RegisterLogServer(s *grpc.Server, srv LogServer) {
	s.RegisterService(&_Log_serviceDesc, srv)
}

func _Log_QueryShareLogLatestTs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryShareLogLatestTsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).QueryShareLogLatestTs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_log.Log/QueryShareLogLatestTs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).QueryShareLogLatestTs(ctx, req.(*QueryShareLogLatestTsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Log_AddBlockLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBlockLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).AddBlockLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_log.Log/AddBlockLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).AddBlockLog(ctx, req.(*AddBlockLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Log_AddMinShareLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddMinShareLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).AddMinShareLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_log.Log/AddMinShareLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).AddMinShareLogs(ctx, req.(*AddMinShareLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Log_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_log.Log",
	HandlerType: (*LogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryShareLogLatestTs",
			Handler:    _Log_QueryShareLogLatestTs_Handler,
		},
		{
			MethodName: "AddBlockLog",
			Handler:    _Log_AddBlockLog_Handler,
		},
		{
			MethodName: "AddMinShareLogs",
			Handler:    _Log_AddMinShareLogs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "log.proto",
}
