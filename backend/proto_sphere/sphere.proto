syntax = "proto3";

package proto_sphere;

message StratumJob {
    string prev_hash = 1;
    string coin_base1 = 2;
    string coin_base2 = 3;
    repeated string merkle_branch = 4;
    string version = 5;
    string n_bits = 6;
    StratumJobMeta meta = 7;
}

message StratumJobMeta {
    int32 height = 1;
    int32 minTimeTs = 2;
    int32 curTimeTs = 3;
}

message SysInfo {
     string hostname = 1;
     int32  pid = 2;
}

message StratumConfig {
    string pool_tag = 1;
    string payout_address = 2;
    string coin_type = 3;
    bool used_test_net = 4;
    int32 extra_nonce1_length = 5;
    int32 extra_nonce2_length = 6;
}

message RegisterRequest{
    StratumConfig  config = 1;
    SysInfo   sys_info = 2;
}

message RegisterResponse{
    string register_id = 1;
}

message GetLatestStratumJobRequest {
    string register_id = 1;
}

message GetLatestStratumJobResponse {
    StratumJob job  = 1;
}

message StratumShare {
	string version = 1;
	string extra_nonce1 = 2;
	string extra_nonce2 = 3;
	string n_time  = 4;
	string n_bits = 5;
	string nonce = 6;
	string prev_hash  = 7;
	string coin_base1  = 8;
	string coin_base2 = 9;
    StratumShareMeta meta = 10;
}

enum StratumShareState {
    SUC_SOLVE_SHARE = 0;
    SUC_SUBMIT_BLOCK = 1;
	ERR_DUPLICATE_SHARE = 2;
    ERR_LOW_DIFFICULTY_SHARE = 3;
	ERR_JOB_NOT_FOUND = 4;
	ERR_SUBMIT_BLOCK = 5;
}

message StratumShareMeta {
    int32 	height = 1;
    int32   curTimeTs = 2;
}

message SubmitShareRequest {
    string register_id = 1;
    StratumShare share = 2;
    uint64  difficulty = 3;
}

message SubmitShareResponse {
    SubmitShareResult result  = 1;
}

message SubmitShareResult {
    StratumShareState state = 1;
    double compute_power  = 2;
    string hash  = 3;
}

message ClearShareHistoryRequest {
    string register_id = 1;
    int32  height = 2;
}

message ClearShareHistoryResponse {
    bool result = 1;
}

message UnRegisterRequest {
    string register_id = 1;
}

message UnRegisterResponse {
    bool result = 2;
}

service Sphere {
    rpc register(RegisterRequest) returns (RegisterResponse) {}
    rpc getLatestStratumJob(GetLatestStratumJobRequest) returns (GetLatestStratumJobResponse) {}
    rpc subscribe(GetLatestStratumJobRequest) returns (stream GetLatestStratumJobResponse) {}
    rpc submitShare(SubmitShareRequest) returns (SubmitShareResponse){}
    rpc clearShareHistory(ClearShareHistoryRequest) returns (ClearShareHistoryResponse) {}
    rpc unRegister(UnRegisterRequest) returns (UnRegisterResponse) {}
}

