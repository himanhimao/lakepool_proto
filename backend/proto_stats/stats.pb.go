// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stats.proto

package proto_stats_daemon

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ShareLog struct {
	WorkerName           string   `protobuf:"bytes,1,opt,name=worker_name,json=workerName,proto3" json:"worker_name,omitempty"`
	ServerIp             string   `protobuf:"bytes,2,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`
	ClientIp             string   `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	UserName             string   `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ExtName              string   `protobuf:"bytes,5,opt,name=ext_name,json=extName,proto3" json:"ext_name,omitempty"`
	UserAgent            string   `protobuf:"bytes,6,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	HostName             string   `protobuf:"bytes,7,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Pid                  int32    `protobuf:"varint,8,opt,name=pid,proto3" json:"pid,omitempty"`
	Height               int32    `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	ComputePower         float64  `protobuf:"fixed64,10,opt,name=compute_power,json=computePower,proto3" json:"compute_power,omitempty"`
	IsRight              bool     `protobuf:"varint,11,opt,name=is_right,json=isRight,proto3" json:"is_right,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareLog) Reset()         { *m = ShareLog{} }
func (m *ShareLog) String() string { return proto.CompactTextString(m) }
func (*ShareLog) ProtoMessage()    {}
func (*ShareLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_82ffbb4eb6326b71, []int{0}
}
func (m *ShareLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareLog.Unmarshal(m, b)
}
func (m *ShareLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareLog.Marshal(b, m, deterministic)
}
func (dst *ShareLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareLog.Merge(dst, src)
}
func (m *ShareLog) XXX_Size() int {
	return xxx_messageInfo_ShareLog.Size(m)
}
func (m *ShareLog) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareLog.DiscardUnknown(m)
}

var xxx_messageInfo_ShareLog proto.InternalMessageInfo

func (m *ShareLog) GetWorkerName() string {
	if m != nil {
		return m.WorkerName
	}
	return ""
}

func (m *ShareLog) GetServerIp() string {
	if m != nil {
		return m.ServerIp
	}
	return ""
}

func (m *ShareLog) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *ShareLog) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *ShareLog) GetExtName() string {
	if m != nil {
		return m.ExtName
	}
	return ""
}

func (m *ShareLog) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *ShareLog) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *ShareLog) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ShareLog) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ShareLog) GetComputePower() float64 {
	if m != nil {
		return m.ComputePower
	}
	return 0
}

func (m *ShareLog) GetIsRight() bool {
	if m != nil {
		return m.IsRight
	}
	return false
}

type AddShareLogRequest struct {
	Ts                   int64     `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	CoinType             string    `protobuf:"bytes,2,opt,name=coinType,proto3" json:"coinType,omitempty"`
	Log                  *ShareLog `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AddShareLogRequest) Reset()         { *m = AddShareLogRequest{} }
func (m *AddShareLogRequest) String() string { return proto.CompactTextString(m) }
func (*AddShareLogRequest) ProtoMessage()    {}
func (*AddShareLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_82ffbb4eb6326b71, []int{1}
}
func (m *AddShareLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddShareLogRequest.Unmarshal(m, b)
}
func (m *AddShareLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddShareLogRequest.Marshal(b, m, deterministic)
}
func (dst *AddShareLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddShareLogRequest.Merge(dst, src)
}
func (m *AddShareLogRequest) XXX_Size() int {
	return xxx_messageInfo_AddShareLogRequest.Size(m)
}
func (m *AddShareLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddShareLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddShareLogRequest proto.InternalMessageInfo

func (m *AddShareLogRequest) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *AddShareLogRequest) GetCoinType() string {
	if m != nil {
		return m.CoinType
	}
	return ""
}

func (m *AddShareLogRequest) GetLog() *ShareLog {
	if m != nil {
		return m.Log
	}
	return nil
}

type AddShareLogResponse struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddShareLogResponse) Reset()         { *m = AddShareLogResponse{} }
func (m *AddShareLogResponse) String() string { return proto.CompactTextString(m) }
func (*AddShareLogResponse) ProtoMessage()    {}
func (*AddShareLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_stats_82ffbb4eb6326b71, []int{2}
}
func (m *AddShareLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddShareLogResponse.Unmarshal(m, b)
}
func (m *AddShareLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddShareLogResponse.Marshal(b, m, deterministic)
}
func (dst *AddShareLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddShareLogResponse.Merge(dst, src)
}
func (m *AddShareLogResponse) XXX_Size() int {
	return xxx_messageInfo_AddShareLogResponse.Size(m)
}
func (m *AddShareLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddShareLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddShareLogResponse proto.InternalMessageInfo

func (m *AddShareLogResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*ShareLog)(nil), "proto_stats_daemon.ShareLog")
	proto.RegisterType((*AddShareLogRequest)(nil), "proto_stats_daemon.AddShareLogRequest")
	proto.RegisterType((*AddShareLogResponse)(nil), "proto_stats_daemon.AddShareLogResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StatsClient is the client API for Stats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatsClient interface {
	AddShareLog(ctx context.Context, in *AddShareLogRequest, opts ...grpc.CallOption) (*AddShareLogResponse, error)
}

type statsClient struct {
	cc *grpc.ClientConn
}

func NewStatsClient(cc *grpc.ClientConn) StatsClient {
	return &statsClient{cc}
}

func (c *statsClient) AddShareLog(ctx context.Context, in *AddShareLogRequest, opts ...grpc.CallOption) (*AddShareLogResponse, error) {
	out := new(AddShareLogResponse)
	err := c.cc.Invoke(ctx, "/proto_stats_daemon.Stats/addShareLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatsServer is the server API for Stats service.
type StatsServer interface {
	AddShareLog(context.Context, *AddShareLogRequest) (*AddShareLogResponse, error)
}

func RegisterStatsServer(s *grpc.Server, srv StatsServer) {
	s.RegisterService(&_Stats_serviceDesc, srv)
}

func _Stats_AddShareLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddShareLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).AddShareLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_stats_daemon.Stats/AddShareLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).AddShareLog(ctx, req.(*AddShareLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_stats_daemon.Stats",
	HandlerType: (*StatsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addShareLog",
			Handler:    _Stats_AddShareLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stats.proto",
}

func init() { proto.RegisterFile("stats.proto", fileDescriptor_stats_82ffbb4eb6326b71) }

var fileDescriptor_stats_82ffbb4eb6326b71 = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x49, 0x42, 0xdb, 0x74, 0x02, 0x08, 0x19, 0x09, 0x85, 0x02, 0x22, 0x0a, 0x12, 0xe4,
	0x42, 0x0e, 0xe5, 0x09, 0x7a, 0x44, 0x42, 0x08, 0xb9, 0xdc, 0x43, 0x68, 0x46, 0x89, 0x45, 0x13,
	0x1b, 0xdb, 0xa1, 0xdd, 0xe7, 0xdb, 0x17, 0x5b, 0x79, 0x9c, 0xec, 0x6a, 0xd5, 0x95, 0xf6, 0x94,
	0xcc, 0xff, 0xcd, 0xff, 0x8f, 0x3d, 0x86, 0xc4, 0xd8, 0xda, 0x9a, 0x52, 0x69, 0x69, 0x25, 0x63,
	0xf4, 0xa9, 0x48, 0xaa, 0x9a, 0x1a, 0x7b, 0x39, 0xe4, 0xd7, 0x21, 0xc4, 0xfb, 0xae, 0xd6, 0xf8,
	0x5d, 0xb6, 0xec, 0x03, 0x24, 0x27, 0xa9, 0xff, 0xa2, 0xae, 0x86, 0xba, 0xc7, 0x34, 0xc8, 0x82,
	0x62, 0xcd, 0xc1, 0x4b, 0x3f, 0xea, 0x1e, 0xd9, 0x5b, 0x58, 0x1b, 0xd4, 0xff, 0x51, 0x57, 0x42,
	0xa5, 0x21, 0xe1, 0xd8, 0x0b, 0xdf, 0x94, 0x83, 0x87, 0xa3, 0xc0, 0xc1, 0x3a, 0x18, 0x79, 0xe8,
	0x05, 0x0f, 0x47, 0x33, 0x07, 0x3f, 0xf5, 0xd0, 0x09, 0x14, 0xfb, 0x06, 0x62, 0x3c, 0x5b, 0xcf,
	0x16, 0xc4, 0x56, 0x78, 0xb6, 0x84, 0xde, 0x03, 0x90, 0xaf, 0x6e, 0x71, 0xb0, 0xe9, 0x92, 0x20,
	0x25, 0xed, 0x9c, 0xe0, 0x62, 0x3b, 0x69, 0x26, 0xeb, 0xca, 0xc7, 0x3a, 0x81, 0xbc, 0x2f, 0x21,
	0x52, 0xa2, 0x49, 0xe3, 0x2c, 0x28, 0x16, 0xdc, 0xfd, 0xb2, 0xd7, 0xb0, 0xec, 0x50, 0xb4, 0x9d,
	0x4d, 0xd7, 0x24, 0x4e, 0x15, 0xfb, 0x08, 0xcf, 0x0f, 0xb2, 0x57, 0xa3, 0xc5, 0x4a, 0xc9, 0x13,
	0xea, 0x14, 0xb2, 0xa0, 0x08, 0xf8, 0xb3, 0x49, 0xfc, 0xe9, 0x34, 0x77, 0x4a, 0x61, 0x2a, 0x4d,
	0xf6, 0x24, 0x0b, 0x8a, 0x98, 0xaf, 0x84, 0xe1, 0xae, 0xcc, 0x15, 0xb0, 0x5d, 0xd3, 0xcc, 0x7b,
	0xe4, 0xf8, 0x6f, 0x44, 0x63, 0xd9, 0x0b, 0x08, 0xad, 0xa1, 0x2d, 0x46, 0x3c, 0xb4, 0x86, 0x6d,
	0x20, 0x3e, 0x48, 0x31, 0xfc, 0xba, 0x52, 0x38, 0x2f, 0x6f, 0xae, 0x59, 0x09, 0xd1, 0x51, 0xb6,
	0xb4, 0xb6, 0x64, 0xfb, 0xae, 0xbc, 0x7c, 0xa9, 0xf2, 0x36, 0xdd, 0x35, 0xe6, 0x5f, 0xe0, 0xd5,
	0xbd, 0x89, 0x46, 0xc9, 0xc1, 0xa0, 0xbb, 0xa0, 0x46, 0x33, 0x1e, 0x2d, 0x8d, 0x8d, 0xf9, 0x54,
	0x6d, 0x05, 0x2c, 0xf6, 0x2e, 0x8c, 0xfd, 0x86, 0xa4, 0xbe, 0xf3, 0xb1, 0x4f, 0x0f, 0x4d, 0xba,
	0xbc, 0xca, 0xe6, 0xf3, 0xa3, 0x7d, 0xfe, 0x00, 0xf9, 0x93, 0x3f, 0x4b, 0xea, 0xfc, 0x7a, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x40, 0xea, 0xeb, 0xfe, 0x7b, 0x02, 0x00, 0x00,
}
